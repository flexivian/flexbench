"use strict";(self.webpackChunkflexbench=self.webpackChunkflexbench||[]).push([[103],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||s;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:1},i="Simple Request",a={unversionedId:"CodeExamples/simple-request",id:"CodeExamples/simple-request",title:"Simple Request",description:"This code example is for standalone script",source:"@site/docs/CodeExamples/simple-request.md",sourceDirName:"CodeExamples",slug:"/CodeExamples/simple-request",permalink:"/flexbench/docs/CodeExamples/simple-request",draft:!1,editUrl:"https://github.com/flexivian/flexbench/docs/CodeExamples/simple-request.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Production",permalink:"/flexbench/docs/Installation/production"},next:{title:"Multi Request",permalink:"/flexbench/docs/CodeExamples/multi-request"}},l={},c=[{value:"Create a simple request script",id:"create-a-simple-request-script",level:2},{value:"Run script",id:"run-script",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"simple-request"},"Simple Request"),(0,o.kt)("p",null,"This code example is for standalone script"),(0,o.kt)("h2",{id:"create-a-simple-request-script"},"Create a simple request script"),(0,o.kt)("p",null,"Create a file at root ",(0,o.kt)("inlineCode",{parentName:"p"},"simple-request.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="simple-request.js"',title:'"simple-request.js"'},"/**\n * Scenario:\n * Generate requests towards specific domain\n **/\nvar trafficSimulator = require('flexbench');\n\n\nfunction runTest() {\n    trafficSimulator.debugMode(true);\n    trafficSimulator.testDuration(5);//-1 for infinite run\n    trafficSimulator.workers(1);\n    trafficSimulator.clients(2)\n    trafficSimulator.throttleRequests_bps(50000);//-1 for no throttling\n    trafficSimulator.randomDelayBetweenRequests('0.5-1.1');\n    trafficSimulator.setFunc('request', requestFunc);\n\n    trafficSimulator.start();\n\n    trafficSimulator.events.on('end', function (stats) {\n        //This function will run on exit/stop, when worker has received a message to offload his stats to his master\n        //Get from stats object all exposed metrics\n        console.log('Traffic Simulator Results');\n        console.log('-------------------------');\n\n        var cArr = Object.keys(stats.counters);\n\n        for (var i = 0; i < cArr.length; i++) {\n            var key = cArr[i];\n            console.log('counter %s: %s ', key, stats.counters[key]);\n        }\n        console.log(\"Exiting..\");\n        process.exit();\n    })\n\n\n\n    //stop test after specific period or condition\\\n    setTimeout(function () {\n        trafficSimulator.stop();\n    }, 20 * 1000);\n\n}\n\n/**\n * Create your generate request function here\n * */\nvar requestFunc = function () {\n    //GENERATE REQUEST FUNCTION\n    var headers = {\n        \"my-dummy-header\": '1'\n    };\n    var options = {};\n    options['host'] = 'www.example.com';\n    options['port'] = '80';\n    options['path'] = '/';\n    options['method'] = 'GET';\n    if (headers) {\n        options['headers'] = headers;\n    }\n    //you can use the provided request function from HTS, in order 'catch'/count all response codes in a stats object\n    var req = trafficSimulator.request(options, function (response) {\n        console.log(\"Response: %s\", response.statusCode);\n        response.setEncoding('utf8');\n        response.on('data', function (chunk) {\n            console.log(chunk.length)\n        });\n    });\n\n    req.on('error', function (err) {\n        console.log('error:' + err.message);\n    });\n}\n\nrunTest();\n")),(0,o.kt)("h2",{id:"run-script"},"Run script"),(0,o.kt)("p",null,"Open terminal in your root directory and execute the below command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"node simple-request.js\n")))}p.isMDXComponent=!0}}]);